1. Get the application URL by running these commands:
{{- if and (hasKey .Values "ingress") (hasKey .Values.ingress "enabled") (eq .Values.ingress.enabled true) }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else }}
  {{- if and (hasKey .Values.frontend "service") (hasKey .Values.frontend.service "type") }}
    {{- if eq .Values.frontend.service.type "NodePort" }}
      export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "summarizer-app.fullname" . }})
      export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
      echo http://$NODE_IP:$NODE_PORT
    {{- else if eq .Values.frontend.service.type "LoadBalancer" }}
      NOTE: It may take a few minutes for the LoadBalancer IP to be available.
      You can watch its status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "summarizer-app.fullname" . }}'
      export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "summarizer-app.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
      echo http://$SERVICE_IP:{{ .Values.frontend.service.port | default 3000 }}
    {{- else if eq .Values.frontend.service.type "ClusterIP" }}
      export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "summarizer-app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
      export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
      echo "Visit http://127.0.0.1:8080 to use your application"
      kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
    {{- else }}
      Service type is not defined or not supported.
    {{- end }}
  {{- else }}
    Service type is not defined.
  {{- end }}
{{- end }}
